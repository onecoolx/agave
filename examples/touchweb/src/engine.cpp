/* engine.cpp - Agave application
 *
 * Copyright (C) 2010 Zhang Ji Peng
 * Contact : onecoolx@gmail.com
 */

#include "config.h"
#include <string>
#include <sstream>
#include <picasso/picasso.h>

#include "engine.h"
#include "application.h"

using namespace std;

typedef string (*search_func)(const string&);

struct engine_item {
    ustring name;
    unsigned char* img;
    ps_color c;
    search_func func;
    bool page_fold;
};

static string search_by_google(const string&);
static string search_by_baidu(const string&);

extern unsigned char g_img32[];
extern unsigned char b_img32[];

extern unsigned char g_img16[];
extern unsigned char b_img16[];

class EngineImpl
{
public:
    EngineImpl()
    {
        int bits_pixel = Application::getInstance()->bits_pixel();
        engine_item item;
        item.name = ustring(U("Google"));
        if (bits_pixel == 32) {
            item.img = g_img32;
        } else {
            item.img = g_img16;
        }
        item.c.r = 0;
        item.c.g = 0.5;
        item.c.b = 1;
        item.c.a = 1;
        item.func = search_by_google;
        item.page_fold = true;

        m_items.push_back(item);

        engine_item item2;
        item2.name = ustring(U("Baidu"));
        if (bits_pixel == 32) {
            item2.img = b_img32;
        } else {
            item2.img = b_img16;
        }
        item2.c.r = 0;
        item2.c.g = 0.5;
        item2.c.b = 1;
        item2.c.a = 1;
        item2.func = search_by_baidu;
        item2.page_fold = true;

        m_items.push_back(item2);
    }

    std::vector<engine_item> m_items;
};

Engine::Engine()
    : m_impl(0)
    , current(1)
{
    m_impl = new EngineImpl;
}

Engine::~Engine()
{
    delete m_impl;
}

size_t Engine::getCount(void) const
{
    return m_impl->m_items.size();
}

int Engine::getDefaultId(void) const
{
    return current;
}

void Engine::setDefaultById(int id)
{
    current = id;
}

ustring Engine::getDefaultName(void) const
{
    return m_impl->m_items[current].name;
}

string Engine::searchByDefault(const string& keyword, bool* need_fold)
{
    if (need_fold) {
        *need_fold = m_impl->m_items[current].page_fold;
    }
    return m_impl->m_items[current].func(keyword);
}

std::vector<Engine::Item> Engine::getEngines(void)
{
    std::vector<Engine::Item> items;

    int byte_pixel = Application::getInstance()->bytes_pixel();

    for (size_t i = 0; i < m_impl->m_items.size(); i++) {
        Engine::Item item;
        item.id = i;
        item.name = m_impl->m_items[i].name;
        item.img = m_impl->m_items[i].img;
        item.w = 16;
        item.h = 16;
        item.p = 16 * byte_pixel;
        item.c = m_impl->m_items[i].c;
        item.page_fold = m_impl->m_items[i].page_fold;
        items.push_back(item);
    }
    return items;
}

static string search_by_google(const string& keyword)
{
    stringstream os;
    os << "http://www.google.com.hk/cse?cx=partner-pub-8199729008807893%3Amm5d6qv9vdu&ie=UTF-8&q="
       << keyword.c_str() << "&sa=%CB%D1%CB%F7&siteurl=&siteurl=www.zncsoft.com%2Fgsearch.html";
    return os.str();
}

static string search_by_baidu(const string& keyword)
{
    stringstream os;
    os << "http://www.baidu.com/baidu?wd="
       << keyword.c_str() << "&tn=onecoolx_dg&ie=utf-8&oe=utf-8";
    return os.str();
}

unsigned char g_img32[] = {
    0x0, 0x0, 0x0, 0x0, 0xff, 0xfc, 0xfb, 0xff, 0xe2, 0xdb, 0xcc, 0xff, 0xa6, 0x5f, 0x20, 0xff, 0xa1, 0x4c, 0x4, 0xff, 0xd1, 0xac, 0x86, 0xff, 0xfc, 0xff, 0xfd, 0xff, 0xef, 0xf1, 0xf9, 0xff, 0x3a, 0x3f, 0xc3, 0xff, 0x0, 0x1, 0xd5, 0xff, 0x2, 0x2, 0xfa, 0xff, 0x0, 0x0, 0xfd, 0xff, 0x2, 0x0, 0xfd, 0xff, 0x0, 0x1, 0xf6, 0xff, 0x0, 0x0, 0xee, 0xff, 0x0, 0x0, 0x0, 0x0,
    0xff, 0xfb, 0xfc, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xb8, 0x83, 0x50, 0xff, 0xb9, 0x57, 0x0, 0xff, 0xcc, 0x63, 0x2, 0xff, 0xbc, 0x62, 0xe, 0xff, 0xf2, 0xe6, 0xdc, 0xff, 0xfc, 0xfe, 0xff, 0xff, 0xd5, 0xd4, 0xf6, 0xff, 0xa, 0xc, 0xe7, 0xff, 0x0, 0x0, 0xfd, 0xff, 0x3, 0x1, 0xfe, 0xff, 0x0, 0x1, 0xfd, 0xff, 0x0, 0x1, 0xf6, 0xff, 0x4, 0x0, 0xec, 0xff, 0x0, 0x2, 0xe0, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xfb, 0xfb, 0xfb, 0xff, 0xb6, 0x6c, 0x24, 0xff, 0xc8, 0x63, 0x0, 0xff, 0xcf, 0x66, 0x0, 0xff, 0xc1, 0x59, 0x0, 0xff, 0xd2, 0xaf, 0x83, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xfc, 0xfe, 0xff, 0x46, 0x46, 0xe0, 0xff, 0x1, 0x0, 0xf9, 0xff, 0x0, 0x3, 0xfc, 0xff, 0x1, 0x1, 0xf9, 0xff, 0x3, 0x0, 0xf0, 0xff, 0x0, 0x1, 0xeb, 0xff, 0x0, 0x0, 0xdf, 0xff,
    0xff, 0xfd, 0xfe, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xbe, 0x7c, 0x3b, 0xff, 0xc6, 0x5d, 0x2, 0xff, 0xc8, 0x66, 0x2, 0xff, 0xc4, 0x5a, 0x2, 0xff, 0xce, 0x8e, 0x57, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x50, 0x53, 0xdd, 0xff, 0x4, 0x0, 0xf4, 0xff, 0x0, 0x1, 0xff, 0xff, 0x3, 0x0, 0xfd, 0xff, 0x0, 0x1, 0xf3, 0xff, 0x0, 0x0, 0xe5, 0xff, 0x3, 0x2, 0xda, 0xff,
    0xfd, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xd2, 0xa9, 0x82, 0xff, 0xb9, 0x53, 0x0, 0xff, 0xca, 0x64, 0x4, 0xff, 0xbd, 0x58, 0x2, 0xff, 0xc8, 0x90, 0x59, 0xff, 0xfe, 0xff, 0xfd, 0xff, 0xff, 0xf8, 0xff, 0xff, 0x28, 0x29, 0xc7, 0xff, 0x6, 0x19, 0xc2, 0xff, 0x11, 0x26, 0xb1, 0xff, 0x11, 0x20, 0xb6, 0xff, 0x5, 0x10, 0xcc, 0xff, 0x0, 0x2, 0xe1, 0xff, 0x0, 0x1, 0xd5, 0xff,
    0xed, 0xe1, 0xdb, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xf6, 0xf1, 0xe8, 0xff, 0xb5, 0x6c, 0x28, 0xff, 0xbb, 0x54, 0x0, 0xff, 0xb9, 0x5d, 0xe, 0xff, 0xe4, 0xcf, 0xb9, 0xff, 0xff, 0xff, 0xfe, 0xff, 0x9b, 0xb1, 0x99, 0xff, 0x20, 0x70, 0x1d, 0xff, 0x37, 0x95, 0x0, 0xff, 0x3d, 0x96, 0x3, 0xff, 0x3b, 0x93, 0x0, 0xff, 0x36, 0x89, 0x9, 0xff, 0x2d, 0x65, 0x3a, 0xff, 0xf, 0x2b, 0x8a, 0xff,
    0x9f, 0x5e, 0x27, 0xff, 0xd6, 0xbe, 0xac, 0xff, 0xfe, 0xfd, 0xff, 0xff, 0xf9, 0xf2, 0xef, 0xff, 0xde, 0xbf, 0xa0, 0xff, 0xed, 0xe2, 0xda, 0xff, 0xfe, 0xff, 0xfd, 0xff, 0x99, 0xb8, 0x85, 0xff, 0x2c, 0x82, 0x0, 0xff, 0x3b, 0x9a, 0x3, 0xff, 0x3a, 0x98, 0x3, 0xff, 0x37, 0x96, 0x0, 0xff, 0x39, 0x96, 0x0, 0xff, 0x3a, 0x91, 0x1, 0xff, 0x3f, 0x93, 0x0, 0xff, 0x42, 0x87, 0x1, 0xff,
    0xa8, 0x56, 0x15, 0xff, 0x9c, 0x4f, 0x10, 0xff, 0xa6, 0x6f, 0x42, 0xff, 0xbe, 0xa2, 0x84, 0xff, 0xfc, 0xfe, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xc9, 0xda, 0xbf, 0xff, 0x1f, 0x77, 0x2, 0xff, 0x35, 0x9b, 0x0, 0xff, 0x37, 0x99, 0x0, 0xff, 0x37, 0x9a, 0x0, 0xff, 0x3c, 0x94, 0x1, 0xff, 0x3c, 0x94, 0x1, 0xff, 0x38, 0x8f, 0x0, 0xff, 0x3d, 0x8b, 0x1, 0xff, 0x3e, 0x87, 0x1, 0xff,
    0xa2, 0x59, 0x27, 0xff, 0xa4, 0x55, 0x1c, 0xff, 0x9e, 0x4a, 0x8, 0xff, 0x98, 0x48, 0x11, 0xff, 0xf1, 0xe8, 0xdf, 0xff, 0xfe, 0xfe, 0xfe, 0xff, 0xe4, 0xec, 0xe1, 0xff, 0x51, 0x9a, 0x26, 0xff, 0x2d, 0x94, 0x0, 0xff, 0x39, 0x97, 0x2, 0xff, 0x3b, 0x97, 0x2, 0xff, 0x38, 0x94, 0x0, 0xff, 0x3b, 0x92, 0x2, 0xff, 0x3d, 0x8f, 0x1, 0xff, 0x3d, 0x8b, 0x2, 0xff, 0x38, 0x89, 0x0, 0xff,
    0x8e, 0x49, 0x22, 0xff, 0x9d, 0x5e, 0x38, 0xff, 0xb2, 0x7e, 0x56, 0xff, 0xc0, 0x90, 0x6e, 0xff, 0xee, 0xda, 0xcf, 0xff, 0xfe, 0xff, 0xfd, 0xff, 0xfd, 0xff, 0xfe, 0xff, 0xeb, 0xf2, 0xeb, 0xff, 0x6b, 0xa8, 0x46, 0xff, 0x2d, 0x8d, 0x1, 0xff, 0x3c, 0x96, 0x0, 0xff, 0x3b, 0x93, 0x0, 0xff, 0x3b, 0x93, 0x0, 0xff, 0x3d, 0x8f, 0x0, 0xff, 0x3d, 0x8a, 0x0, 0xff, 0x3d, 0x84, 0x0, 0xff,
    0xd0, 0xbb, 0xa6, 0xff, 0xfd, 0xee, 0xeb, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xd5, 0xf0, 0xfa, 0xff, 0xb0, 0xdd, 0xe8, 0xff, 0x96, 0xcf, 0xde, 0xff, 0xea, 0xf3, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xfc, 0xfa, 0xff, 0x6d, 0xa6, 0x49, 0xff, 0x2a, 0x8d, 0x1, 0xff, 0x38, 0x93, 0x0, 0xff, 0x3b, 0x90, 0x0, 0xff, 0x39, 0x8b, 0x2, 0xff, 0x3c, 0x88, 0x0, 0xff, 0x3c, 0x85, 0x0, 0xff,
    0xff, 0xfd, 0xff, 0xff, 0xd0, 0xe9, 0xf3, 0xff, 0x38, 0xb0, 0xce, 0xff, 0xa, 0xb0, 0xdf, 0xff, 0x0, 0xb5, 0xe3, 0xff, 0x2, 0xae, 0xe2, 0xff, 0x2a, 0xa9, 0xd6, 0xff, 0xd9, 0xec, 0xf1, 0xff, 0xfc, 0xfe, 0xff, 0xff, 0xe0, 0xe8, 0xd7, 0xff, 0x3f, 0x86, 0xd, 0xff, 0x39, 0x90, 0x0, 0xff, 0x3c, 0x8c, 0x3, 0xff, 0x3d, 0x89, 0x2, 0xff, 0x3e, 0x85, 0x0, 0xff, 0x3e, 0x81, 0x0, 0xff,
    0xf4, 0xfb, 0xf8, 0xff, 0x37, 0xa6, 0xcc, 0xff, 0x0, 0xb4, 0xef, 0xff, 0x2, 0xc5, 0xfe, 0xff, 0xa, 0xc3, 0xfb, 0xff, 0x9, 0xbe, 0xf6, 0xff, 0x0, 0xaa, 0xea, 0xff, 0x4a, 0xb0, 0xdb, 0xff, 0xfe, 0xfe, 0xfe, 0xff, 0xff, 0xfc, 0xfe, 0xff, 0x55, 0x91, 0x25, 0xff, 0x34, 0x89, 0x0, 0xff, 0x3b, 0x8d, 0x0, 0xff, 0x3d, 0x86, 0x0, 0xff, 0x43, 0x81, 0x5, 0xff, 0x3e, 0x7d, 0x1, 0xff,
    0xde, 0xec, 0xf2, 0xff, 0x1b, 0xa2, 0xd8, 0xff, 0x10, 0xb9, 0xf7, 0xff, 0xc, 0xb9, 0xf1, 0xff, 0xf, 0xb5, 0xf2, 0xff, 0xf, 0xb2, 0xf0, 0xff, 0x1b, 0xb3, 0xf4, 0xff, 0x2f, 0xab, 0xe7, 0xff, 0xf3, 0xf9, 0xff, 0xff, 0xfe, 0xfb, 0xf6, 0xff, 0x4a, 0x85, 0x1d, 0xff, 0x39, 0x86, 0x0, 0xff, 0x41, 0x85, 0x2, 0xff, 0x3c, 0x86, 0x0, 0xff, 0x40, 0x80, 0x2, 0xff, 0x3d, 0x7b, 0x0, 0xff,
    0xfe, 0xfc, 0xfb, 0xff, 0x5f, 0xb7, 0xdf, 0xff, 0xc, 0xa7, 0xec, 0xff, 0x16, 0xb1, 0xf0, 0xff, 0x15, 0xb2, 0xf1, 0xff, 0x1b, 0xb3, 0xf4, 0xff, 0x1e, 0xaa, 0xf1, 0xff, 0x7c, 0xc4, 0xee, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xb7, 0xca, 0xa9, 0xff, 0x31, 0x76, 0x3, 0xff, 0x3b, 0x83, 0x1, 0xff, 0x3f, 0x82, 0x3, 0xff, 0x3e, 0x7d, 0x0, 0xff, 0x3e, 0x7a, 0x0, 0xff, 0x43, 0x79, 0x0, 0xff,
    0x0, 0x0, 0x0, 0x0, 0xec, 0xf4, 0xfb, 0xff, 0x7c, 0xc5, 0xeb, 0xff, 0x4f, 0xb6, 0xef, 0xff, 0x45, 0xb1, 0xf1, 0xff, 0x4d, 0xb6, 0xef, 0xff, 0x93, 0xce, 0xf6, 0xff, 0xf6, 0xfb, 0xf9, 0xff, 0xde, 0xe1, 0xd1, 0xff, 0x49, 0x78, 0x1c, 0xff, 0x34, 0x7a, 0x0, 0xff, 0x3f, 0x7c, 0x2, 0xff, 0x40, 0x7c, 0x0, 0xff, 0x3c, 0x7b, 0x0, 0xff, 0x41, 0x7a, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0,
};

unsigned char g_img16[] = {
    0x0, 0x0, 0xff, 0xff, 0xdc, 0xce, 0xf4, 0x22, 0x74, 0x2, 0x7a, 0x85, 0xff, 0xff, 0x9d, 0xff, 0xe7, 0xc1, 0x0, 0xd0, 0x0, 0xf8, 0x0, 0xf8, 0x0, 0xf8, 0x0, 0xf0, 0x0, 0xe8, 0x0, 0x0, 0xdf, 0xff, 0xff, 0xff, 0x17, 0x54, 0xb7, 0x2, 0x19, 0x3, 0x17, 0xb, 0x3e, 0xdf, 0xff, 0xff, 0xba, 0xf6, 0x61, 0xe0, 0x0, 0xf8, 0x0, 0xf8, 0x0, 0xf8, 0x0, 0xf0, 0x0, 0xe8, 0x0, 0xe0, 0xff, 0xff, 0xdf,
    0xff, 0x76, 0x23, 0x19, 0x3, 0x39, 0x3, 0xd8, 0x2, 0x7a, 0x85, 0xff, 0xff, 0xff, 0xff, 0x28, 0xe2, 0x0, 0xf8, 0x0, 0xf8, 0x0, 0xf8, 0x0, 0xf0, 0x0, 0xe8, 0x0, 0xd8, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x3b, 0xf8, 0x2, 0x39, 0x3, 0xd8, 0x2, 0x79, 0x54, 0xff, 0xff, 0xff, 0xff, 0x8a, 0xda, 0x0, 0xf0, 0x0, 0xf8, 0x0, 0xf8, 0x0, 0xf0, 0x0, 0xe0, 0x0, 0xd8, 0xff, 0xff, 0xff, 0xff, 0x5a, 0x85,
    0x97, 0x2, 0x39, 0x3, 0xd7, 0x2, 0x99, 0x5c, 0xff, 0xff, 0xdf, 0xff, 0x45, 0xc1, 0xc0, 0xc0, 0x22, 0xb1, 0x2, 0xb1, 0x80, 0xc8, 0x0, 0xe0, 0x0, 0xd0, 0x1d, 0xdf, 0xff, 0xff, 0x9e, 0xef, 0x76, 0x2b, 0xb7, 0x2, 0xf7, 0xa, 0x7c, 0xbe, 0xff, 0xff, 0x93, 0x9d, 0x84, 0x1b, 0xa6, 0x4, 0xa7, 0x4, 0x87, 0x4, 0x46, 0xc, 0x25, 0x3b, 0x41, 0x89, 0xf3, 0x22, 0xfa, 0xad, 0xff, 0xff, 0x9f, 0xef,
    0xfb, 0xa5, 0x1d, 0xdf, 0xff, 0xff, 0xd3, 0x85, 0x5, 0x4, 0xc7, 0x4, 0xc7, 0x4, 0xa6, 0x4, 0xa7, 0x4, 0x87, 0x4, 0x87, 0x4, 0x28, 0x4, 0xb5, 0x12, 0x73, 0x12, 0x74, 0x43, 0x17, 0x85, 0xff, 0xff, 0xff, 0xff, 0xd9, 0xbe, 0xa3, 0x3, 0xc6, 0x4, 0xc6, 0x4, 0xc6, 0x4, 0xa7, 0x4, 0xa7, 0x4, 0x67, 0x4, 0x47, 0x4, 0x27, 0x4, 0xd4, 0x22, 0xb4, 0x1a, 0x53, 0xa, 0x53, 0x12, 0x5e, 0xdf, 0xff,
    0xff, 0x7c, 0xe7, 0xca, 0x24, 0xa5, 0x4, 0xa7, 0x4, 0xa7, 0x4, 0xa7, 0x4, 0x87, 0x4, 0x67, 0x4, 0x47, 0x4, 0x47, 0x4, 0x51, 0x22, 0xf3, 0x3a, 0xf6, 0x53, 0x98, 0x6c, 0xdd, 0xce, 0xff, 0xff, 0xff, 0xff, 0x9d, 0xef, 0x4d, 0x45, 0x65, 0x4, 0xa7, 0x4, 0x87, 0x4, 0x87, 0x4, 0x67, 0x4, 0x47, 0x4, 0x27, 0x4, 0xda, 0xa5, 0x7f, 0xef, 0xff, 0xff, 0x9a, 0xff, 0xf6, 0xee, 0x72, 0xde, 0x9d, 0xf7,
    0xff, 0xff, 0xff, 0xff, 0x2d, 0x4d, 0x65, 0x4, 0x87, 0x4, 0x87, 0x4, 0x47, 0x4, 0x47, 0x4, 0x27, 0x4, 0xff, 0xff, 0x5a, 0xf7, 0x87, 0xcd, 0x81, 0xdd, 0xa0, 0xe5, 0x60, 0xe5, 0x45, 0xd5, 0x7b, 0xf7, 0xff, 0xff, 0x5c, 0xd7, 0x27, 0xc, 0x87, 0x4, 0x67, 0x4, 0x47, 0x4, 0x27, 0x4, 0x7, 0x4, 0xde, 0xff, 0x26, 0xcd, 0xa0, 0xed, 0x20, 0xfe, 0x1, 0xfe, 0xe1, 0xf5, 0x40, 0xed, 0x89, 0xdd,
    0xff, 0xff, 0xff, 0xff, 0x8a, 0x24, 0x46, 0x4, 0x67, 0x4, 0x27, 0x4, 0x8, 0x4, 0xe7, 0x3, 0x7b, 0xf7, 0x3, 0xdd, 0xc2, 0xf5, 0xc1, 0xf5, 0xa1, 0xf5, 0x81, 0xf5, 0x83, 0xf5, 0x45, 0xe5, 0xde, 0xff, 0xdf, 0xf7, 0x29, 0x1c, 0x27, 0x4, 0x28, 0x4, 0x27, 0x4, 0x8, 0x4, 0xc7, 0x3, 0xff, 0xff, 0xab, 0xdd, 0x21, 0xed, 0x82, 0xf5, 0x82, 0xf5, 0x83, 0xf5, 0x43, 0xf5, 0x2f, 0xee, 0xff, 0xff,
    0x56, 0xae, 0xa6, 0x3, 0x7, 0x4, 0x7, 0x4, 0xe7, 0x3, 0xc7, 0x3, 0xc8, 0x3, 0x0, 0x0, 0xbd, 0xff, 0x2f, 0xee, 0xa9, 0xed, 0x88, 0xf5, 0xa9, 0xed, 0x72, 0xf6, 0xde, 0xff, 0x1b, 0xd7, 0xc9, 0x1b, 0xc6, 0x3, 0xe7, 0x3, 0xe8, 0x3, 0xc7, 0x3, 0xc8, 0x3, 0x0, 0x0,
};

unsigned char b_img32[] = {
    0xd6, 0x83, 0x0, 0xff, 0xd6, 0x83, 0x0, 0xff, 0xd5, 0x81, 0x0, 0xff, 0xd3, 0x80, 0x0, 0xff, 0xd3, 0x7e, 0x0, 0xff, 0xd0, 0x7b, 0x0, 0xff, 0xcf, 0x79, 0x0, 0xff, 0xcd, 0x76, 0x0, 0xff, 0xcb, 0x74, 0x0, 0xff, 0xc8, 0x71, 0x0, 0xff, 0xc6, 0x6d, 0x0, 0xff, 0xc4, 0x6b, 0x0, 0xff, 0xc2, 0x68, 0x0, 0xff, 0xbf, 0x65, 0x0, 0xff, 0xbd, 0x61, 0x0, 0xff, 0xb9, 0x5e, 0x0, 0xff,
    0xd6, 0x83, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 0x5a, 0x0, 0xff,
    0xd5, 0x81, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xd9, 0xda, 0xff, 0xea, 0x81, 0x85, 0xff, 0xf7, 0xd2, 0xd3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xda, 0xdb, 0xff, 0xf9, 0xdb, 0xdd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb4, 0x57, 0x0, 0xff,
    0xd3, 0x7f, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xf9, 0xf9, 0xff, 0xe9, 0x74, 0x78, 0xff, 0xdc, 0x25, 0x2a, 0xff, 0xe5, 0x5b, 0x60, 0xff, 0xf9, 0xdb, 0xdd, 0xff, 0xe0, 0x3a, 0x40, 0xff, 0xe2, 0x46, 0x4c, 0xff, 0xf9, 0xdb, 0xdd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb2, 0x54, 0x0, 0xff,
    0xd2, 0x7d, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe9, 0x71, 0x76, 0xff, 0xdf, 0x30, 0x39, 0xff, 0xe6, 0x5f, 0x66, 0xff, 0xf6, 0xc8, 0xcb, 0xff, 0xde, 0x2f, 0x36, 0xff, 0xe1, 0x41, 0x47, 0xff, 0xf6, 0xc8, 0xcb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xaf, 0x50, 0x0, 0xff,
    0xd0, 0x7a, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfa, 0xe0, 0xe1, 0xff, 0xe5, 0x5e, 0x64, 0xff, 0xe7, 0x67, 0x6c, 0xff, 0xf1, 0xac, 0xae, 0xff, 0xe6, 0x5f, 0x66, 0xff, 0xed, 0x92, 0x96, 0xff, 0xff, 0xff, 0xff, 0xff, 0xed, 0x92, 0x96, 0xff, 0xed, 0x92, 0x96, 0xff, 0xf6, 0xc8, 0xcb, 0xff, 0xfa, 0xe1, 0xe2, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xad, 0x4d, 0x0, 0xff,
    0xce, 0x77, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xa5, 0xaa, 0xff, 0xda, 0x18, 0x21, 0xff, 0xdf, 0x37, 0x3e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xdb, 0xdd, 0xff, 0xfe, 0xf7, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xdb, 0xdd, 0xff, 0xe4, 0x53, 0x59, 0xff, 0xe3, 0x52, 0x59, 0xff, 0xfb, 0xe6, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xaa, 0x49, 0x0, 0xff,
    0xcc, 0x75, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf6, 0xc8, 0xca, 0xff, 0xdf, 0x34, 0x3c, 0xff, 0xe3, 0x4c, 0x52, 0xff, 0xf3, 0xb2, 0xb5, 0xff, 0xf9, 0xdb, 0xdd, 0xff, 0xe6, 0x63, 0x69, 0xff, 0xe7, 0x6c, 0x71, 0xff, 0xf9, 0xdb, 0xdd, 0xff, 0xec, 0x87, 0x8b, 0xff, 0xde, 0x30, 0x37, 0xff, 0xdb, 0x1a, 0x24, 0xff, 0xf6, 0xc8, 0xcb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa8, 0x47, 0x0, 0xff,
    0xc9, 0x73, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xfc, 0xff, 0xf1, 0xa9, 0xac, 0xff, 0xed, 0x92, 0x96, 0xff, 0xf9, 0xdb, 0xdd, 0xff, 0xe2, 0x47, 0x4f, 0xff, 0xdb, 0x1e, 0x27, 0xff, 0xdd, 0x24, 0x2c, 0xff, 0xe4, 0x57, 0x5d, 0xff, 0xf9, 0xdb, 0xdd, 0xff, 0xe2, 0x4e, 0x53, 0xff, 0xe2, 0x4a, 0x51, 0xff, 0xf9, 0xde, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa5, 0x43, 0x0, 0xff,
    0xc7, 0x6f, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xf7, 0xf7, 0xff, 0xf9, 0xdb, 0xdd, 0xff, 0xe2, 0x48, 0x50, 0xff, 0xdb, 0x1e, 0x28, 0xff, 0xdb, 0x18, 0x22, 0xff, 0xdb, 0x18, 0x22, 0xff, 0xdb, 0x18, 0x22, 0xff, 0xe3, 0x50, 0x58, 0xff, 0xf9, 0xdb, 0xdd, 0xff, 0xf4, 0xbe, 0xc1, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa3, 0x40, 0x0, 0xff,
    0xc4, 0x6b, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xd2, 0xd4, 0xff, 0xe2, 0x44, 0x4b, 0xff, 0xdc, 0x1c, 0x26, 0xff, 0xdb, 0x18, 0x22, 0xff, 0xdb, 0x18, 0x22, 0xff, 0xdb, 0x18, 0x22, 0xff, 0xdb, 0x18, 0x22, 0xff, 0xdd, 0x25, 0x2f, 0xff, 0xe5, 0x5a, 0x61, 0xff, 0xf9, 0xdc, 0xdd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa0, 0x3d, 0x0, 0xff,
    0xc2, 0x68, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0xff, 0xea, 0x7c, 0x82, 0xff, 0xdb, 0x16, 0x20, 0xff, 0xdb, 0x17, 0x21, 0xff, 0xdb, 0x18, 0x22, 0xff, 0xdb, 0x18, 0x22, 0xff, 0xdb, 0x18, 0x22, 0xff, 0xdb, 0x18, 0x22, 0xff, 0xdb, 0x16, 0x20, 0xff, 0xdd, 0x23, 0x2d, 0xff, 0xf4, 0xbd, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9e, 0x3b, 0x0, 0xff,
    0xbf, 0x65, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0xff, 0xeb, 0x81, 0x87, 0xff, 0xda, 0xf, 0x19, 0xff, 0xda, 0x10, 0x1a, 0xff, 0xda, 0x10, 0x1b, 0xff, 0xd9, 0xe, 0x19, 0xff, 0xda, 0xf, 0x19, 0xff, 0xda, 0x13, 0x1e, 0xff, 0xda, 0x13, 0x1d, 0xff, 0xdb, 0x19, 0x23, 0xff, 0xf0, 0xa2, 0xa6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9d, 0x38, 0x0, 0xff,
    0xbd, 0x61, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfa, 0xe0, 0xe1, 0xff, 0xe7, 0x65, 0x6c, 0xff, 0xe1, 0x3e, 0x46, 0xff, 0xe3, 0x4b, 0x54, 0xff, 0xed, 0x8f, 0x93, 0xff, 0xed, 0x8f, 0x93, 0xff, 0xe0, 0x3b, 0x43, 0xff, 0xde, 0x2b, 0x34, 0xff, 0xe5, 0x60, 0x67, 0xff, 0xfb, 0xe8, 0xe9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9b, 0x36, 0x0, 0xff,
    0xba, 0x5e, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9a, 0x35, 0x0, 0xff,
    0xb8, 0x5b, 0x0, 0xff, 0xb4, 0x57, 0x0, 0xff, 0xb2, 0x54, 0x0, 0xff, 0xaf, 0x51, 0x0, 0xff, 0xad, 0x4e, 0x0, 0xff, 0xab, 0x4a, 0x0, 0xff, 0xa8, 0x47, 0x0, 0xff, 0xa6, 0x44, 0x0, 0xff, 0xa3, 0x42, 0x0, 0xff, 0xa2, 0x3e, 0x0, 0xff, 0xa0, 0x3c, 0x0, 0xff, 0x9e, 0x3a, 0x0, 0xff, 0x9c, 0x38, 0x0, 0xff, 0x9b, 0x36, 0x0, 0xff, 0x9a, 0x34, 0x0, 0xff, 0x98, 0x33, 0x0, 0xff,
};

unsigned char b_img16[] = {
    0x1a, 0x4, 0x1a, 0x4, 0x1a, 0x4, 0x1a, 0x4, 0xfa, 0x3, 0xda, 0x3, 0xd9, 0x3, 0xb9, 0x3, 0xb9, 0x3, 0x99, 0x3, 0x78, 0x3, 0x58, 0x3, 0x58, 0x3, 0x37, 0x3, 0x17, 0x3, 0xf7, 0x2, 0x1a, 0x4, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd7, 0x2, 0x1a, 0x4, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xde, 0x1d, 0x84, 0x9e, 0xd6, 0xff, 0xff, 0xdf, 0xde, 0xdf, 0xde, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb6, 0x2, 0xfa, 0x3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xbd, 0x7b, 0x3b, 0x29, 0xdc, 0x62, 0xdf, 0xde, 0xdc, 0x41, 0x3c, 0x4a, 0xdf, 0xde, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb6, 0x2, 0xfa, 0x3, 0xff, 0xff, 0xff,
    0xff, 0x7f, 0xef, 0xff, 0xff, 0x9d, 0x73, 0x9b, 0x39, 0xfc, 0x62, 0x5e, 0xce, 0x7b, 0x31, 0x1c, 0x42, 0x5e, 0xce, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x95, 0x2, 0xda, 0x3, 0xff, 0xff, 0x1f, 0xe7, 0xfc, 0x62, 0x3c, 0x6b, 0x7e, 0xad, 0xfc, 0x62, 0x9d, 0x94, 0xff, 0xff, 0x9d, 0x94, 0x9d, 0x94, 0x5e, 0xce, 0x1f, 0xe7, 0xff, 0xff, 0xff, 0xff, 0x75, 0x2, 0xb9, 0x3, 0xff, 0xff, 0x3e, 0xad,
    0xdb, 0x20, 0xbb, 0x39, 0xff, 0xff, 0xdf, 0xde, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xde, 0x9c, 0x5a, 0x9c, 0x5a, 0x3f, 0xe7, 0xff, 0xff, 0x55, 0x2, 0xb9, 0x3, 0xff, 0xff, 0x5e, 0xce, 0xbb, 0x39, 0x7c, 0x52, 0x9e, 0xb5, 0xdf, 0xde, 0x1c, 0x6b, 0x7c, 0x73, 0xdf, 0xde, 0x3d, 0x8c, 0x9b, 0x31, 0xdb, 0x20, 0x5e, 0xce, 0xff, 0xff, 0x35, 0x2, 0x99, 0x3, 0xff, 0xff, 0xff, 0xff, 0x5e,
    0xad, 0x9d, 0x94, 0xdf, 0xde, 0x3c, 0x4a, 0xfb, 0x20, 0x3b, 0x29, 0xbc, 0x5a, 0xdf, 0xde, 0x7c, 0x52, 0x5c, 0x52, 0xff, 0xde, 0xff, 0xff, 0x14, 0x2, 0x78, 0x3, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xf7, 0xdf, 0xde, 0x5c, 0x52, 0xfb, 0x28, 0xdb, 0x20, 0xdb, 0x20, 0xdb, 0x20, 0x9c, 0x5a, 0xdf, 0xde, 0xfe, 0xc5, 0xff, 0xff, 0xff, 0xff, 0x14, 0x2, 0x58, 0x3, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xd6,
    0x3c, 0x4a, 0xfb, 0x20, 0xdb, 0x20, 0xdb, 0x20, 0xdb, 0x20, 0xdb, 0x20, 0x3b, 0x29, 0xdc, 0x62, 0xff, 0xde, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x1, 0x58, 0x3, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x83, 0xbb, 0x20, 0xbb, 0x20, 0xdb, 0x20, 0xdb, 0x20, 0xdb, 0x20, 0xdb, 0x20, 0xbb, 0x20, 0x1b, 0x29, 0xfe, 0xc5, 0xff, 0xff, 0xff, 0xff, 0xd3, 0x1, 0x37, 0x3, 0xff, 0xff, 0xff, 0xff, 0x1d, 0x84, 0x7b,
    0x18, 0x9b, 0x18, 0x9b, 0x18, 0x7b, 0x18, 0x7b, 0x18, 0x9b, 0x18, 0x9b, 0x18, 0xdb, 0x20, 0x1e, 0xa5, 0xff, 0xff, 0xff, 0xff, 0xd3, 0x1, 0x17, 0x3, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xe7, 0x3c, 0x6b, 0xfc, 0x41, 0x5c, 0x52, 0x7d, 0x94, 0x7d, 0x94, 0xdc, 0x41, 0x5b, 0x31, 0x1c, 0x63, 0x5f, 0xef, 0xff, 0xff, 0xff, 0xff, 0xb3, 0x1, 0xf7, 0x2, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb3, 0x1, 0xd7, 0x2, 0xb6, 0x2, 0xb6, 0x2, 0x95, 0x2, 0x75, 0x2, 0x55, 0x2, 0x35, 0x2, 0x34, 0x2, 0x14, 0x2, 0xf4, 0x1, 0xf4, 0x1, 0xd3, 0x1, 0xd3, 0x1, 0xb3, 0x1, 0xb3, 0x1, 0x93, 0x1,
};

